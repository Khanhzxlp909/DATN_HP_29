<template>
  <div>
    <!-- Nội dung của component (ví dụ, hiển thị thông tin user và sản phẩm) -->
    <div v-if="user">
      <p>Xin chào, {{ user.name }}</p>
    </div>
    <div v-if="variations.length > 0">
      <ul>
        <li v-for="variation in variations" :key="variation.id">
          <img :src="variation.productID.defaultImage" alt="Product Image" />
          <p>{{ variation.productID.name }}</p>
          <p>{{ variation.sold }} đã bán</p>
        </li>
      </ul>
      <button @click="getProducts(currentPage + 1)" :disabled="currentPage >= totalPages">Trang kế tiếp</button>
    </div>
    <button @click="logout">Đăng xuất</button>
  </div>
</template>

<script>
import axios from 'axios';
import VueCookies from 'vue-cookies';

export default {
  data() {
    return {
      currentPage: 1,
      pageSize: 3,
      totalPages: 1,
      variations: [],
      user: null,
    };
  },
  mounted() {
    this.getUserInfo();
    this.getProducts(this.currentPage);
  },
  methods: {
    // Lấy thông tin user từ API
    getUserInfo() {
      const token = this.$cookies.get("authToken");
      if (!token) {
        console.error("Không tìm thấy token, vui lòng đăng nhập!");
        return;
      }

      axios
          .get("http://localhost:8080/MiniatureCrafts/user", {
            headers: {
              Authorization: `Bearer ${token}`,
            },
          })
          .then((response) => {
            this.user = response.data;
            console.log("Thông tin user:", this.user);
          })
          .catch((error) => {
            console.error("Lỗi khi lấy thông tin user:", error);
            this.user = null; // Reset user nếu lỗi
          });
    },

    // Hàm xử lý logout
    logout() {
      this.$cookies.remove("authToken");
      this.user = null;
      sessionStorage.removeItem("customers");
      console.log("Đã đăng xuất!");
      this.$router.push("/login"); // Chuyển hướng về trang đăng nhập (sử dụng Vue Router)
    },

    // Hàm chuyển sang trang chi tiết sản phẩm
    openDetail(id) {
      sessionStorage.setItem("idvariation", id);
      this.$router.push("/product-detail");
    },

    // Hàm xử lý dữ liệu sản phẩm
    processData(data) {
      return data.map((item) => {
        item.productID.defaultImage =
            item.productID.imagesDTOS && item.productID.imagesDTOS.length > 0
                ? item.productID.imagesDTOS[0].cd_Images
                : "default.png"; // Hình mặc định
        item.sold = item.sold || 0; // Số lượng đã bán mặc định là 0
        return item;
      });
    },

    // Lấy dữ liệu sản phẩm từ API
    getProducts(page) {
      if (!page || page < 1) page = 1;

      axios
          .get(`http://localhost:8080/MiniatureCrafts/home?page=${page}&size=${this.pageSize}`)
          .then((response) => {
            const rawData = response.data.content || [];
            this.variations = this.processData(rawData);
            this.totalPages = response.data.page.totalPages || 1;
            this.currentPage = page;
            localStorage.setItem("variations", JSON.stringify(this.variations));
            console.log("Dữ liệu sản phẩm:", this.variations);
          })
          .catch((error) => {
            console.error("Lỗi khi lấy dữ liệu từ API:", error);
          });
    },
  },
};
</script>

<style scoped>
/* Thêm các style cho component nếu cần */
</style>
